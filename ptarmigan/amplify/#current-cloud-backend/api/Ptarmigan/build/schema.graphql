type Feed @aws_iam @aws_api_key {
  id: ID!
  feedName: String!
  tags: String
  description: String
  subscribedTo: Int
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type Todo @aws_iam @aws_api_key {
  id: ID!
  name: String!
  description: String
  isComplete: Boolean
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelFeedConnection @aws_api_key @aws_iam {
  items: [Feed]
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

input ModelFeedFilterInput {
  id: ModelIDInput
  feedName: ModelStringInput
  tags: ModelStringInput
  description: ModelStringInput
  subscribedTo: ModelIntInput
  and: [ModelFeedFilterInput]
  or: [ModelFeedFilterInput]
  not: ModelFeedFilterInput
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

type Query {
  getFeed(id: ID!): Feed @aws_api_key @aws_iam
  listFeeds(filter: ModelFeedFilterInput, limit: Int, nextToken: String): ModelFeedConnection @aws_api_key @aws_iam
  syncFeeds(filter: ModelFeedFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelFeedConnection @aws_api_key @aws_iam
  getTodo(id: ID!): Todo @aws_api_key @aws_iam
  listTodos(filter: ModelTodoFilterInput, limit: Int, nextToken: String): ModelTodoConnection @aws_api_key @aws_iam
  syncTodos(filter: ModelTodoFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelTodoConnection @aws_api_key @aws_iam
}

input CreateFeedInput {
  id: ID
  feedName: String!
  tags: String
  description: String
  subscribedTo: Int
  _version: Int
}

input UpdateFeedInput {
  id: ID!
  feedName: String
  tags: String
  description: String
  subscribedTo: Int
  _version: Int
}

input DeleteFeedInput {
  id: ID!
  _version: Int
}

type Mutation {
  createFeed(input: CreateFeedInput!, condition: ModelFeedConditionInput): Feed @aws_api_key @aws_iam
  updateFeed(input: UpdateFeedInput!, condition: ModelFeedConditionInput): Feed @aws_api_key @aws_iam
  deleteFeed(input: DeleteFeedInput!, condition: ModelFeedConditionInput): Feed @aws_api_key @aws_iam
  createTodo(input: CreateTodoInput!, condition: ModelTodoConditionInput): Todo @aws_api_key @aws_iam
  updateTodo(input: UpdateTodoInput!, condition: ModelTodoConditionInput): Todo @aws_api_key @aws_iam
  deleteTodo(input: DeleteTodoInput!, condition: ModelTodoConditionInput): Todo @aws_api_key @aws_iam
}

input ModelFeedConditionInput {
  feedName: ModelStringInput
  tags: ModelStringInput
  description: ModelStringInput
  subscribedTo: ModelIntInput
  and: [ModelFeedConditionInput]
  or: [ModelFeedConditionInput]
  not: ModelFeedConditionInput
}

type Subscription {
  onCreateFeed: Feed @aws_subscribe(mutations: ["createFeed"]) @aws_api_key @aws_iam
  onUpdateFeed: Feed @aws_subscribe(mutations: ["updateFeed"]) @aws_api_key @aws_iam
  onDeleteFeed: Feed @aws_subscribe(mutations: ["deleteFeed"]) @aws_api_key @aws_iam
  onCreateTodo: Todo @aws_subscribe(mutations: ["createTodo"]) @aws_api_key @aws_iam
  onUpdateTodo: Todo @aws_subscribe(mutations: ["updateTodo"]) @aws_api_key @aws_iam
  onDeleteTodo: Todo @aws_subscribe(mutations: ["deleteTodo"]) @aws_api_key @aws_iam
}

type ModelTodoConnection @aws_api_key @aws_iam {
  items: [Todo]
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelTodoFilterInput {
  id: ModelIDInput
  name: ModelStringInput
  description: ModelStringInput
  isComplete: ModelBooleanInput
  and: [ModelTodoFilterInput]
  or: [ModelTodoFilterInput]
  not: ModelTodoFilterInput
}

input CreateTodoInput {
  id: ID
  name: String!
  description: String
  isComplete: Boolean
  _version: Int
}

input UpdateTodoInput {
  id: ID!
  name: String
  description: String
  isComplete: Boolean
  _version: Int
}

input DeleteTodoInput {
  id: ID!
  _version: Int
}

input ModelTodoConditionInput {
  name: ModelStringInput
  description: ModelStringInput
  isComplete: ModelBooleanInput
  and: [ModelTodoConditionInput]
  or: [ModelTodoConditionInput]
  not: ModelTodoConditionInput
}
